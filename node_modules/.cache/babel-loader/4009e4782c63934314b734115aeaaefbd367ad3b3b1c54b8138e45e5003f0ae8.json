{"ast":null,"code":"var _jsxFileName = \"/Users/keerthanajusjith/Downloads/snakes-and-ladders-react (2)/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const [numPlayers, setNumPlayers] = useState(2);\n  const [currentPlayer, setCurrentPlayer] = useState(0);\n  const [diceResult, setDiceResult] = useState(null);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [tiles, setTiles] = useState([]);\n  const ladders = {\n    4: 14,\n    9: 31,\n    20: 38,\n    28: 84,\n    40: 59,\n    51: 67,\n    63: 81,\n    71: 91\n  };\n  const snakes = {\n    17: 7,\n    54: 34,\n    62: 19,\n    64: 60,\n    87: 24,\n    93: 73,\n    95: 75,\n    99: 78\n  };\n  useEffect(() => {\n    const newTiles = [];\n    for (let row = 0; row < 10; row++) {\n      const base = (9 - row) * 10;\n      const isEvenRow = row % 2 === 0;\n      for (let col = 0; col < 10; col++) {\n        const num = isEvenRow ? base + col + 1 : base + (9 - col + 1);\n        newTiles.push(num);\n      }\n    }\n    setTiles(newTiles);\n  }, []);\n  const startGame = () => {\n    const initPlayers = [];\n    for (let i = 0; i < numPlayers; i++) {\n      initPlayers.push({\n        id: i,\n        pos: 1\n      });\n    }\n    setPlayers(initPlayers);\n    setCurrentPlayer(0);\n    setGameStarted(true);\n    setDiceResult(null);\n  };\n  const rollDice = () => {\n    const result = Math.floor(Math.random() * 6) + 1;\n    setDiceResult(result);\n    const updatedPlayers = [...players];\n    let newPos = updatedPlayers[currentPlayer].pos + result;\n    if (newPos > 100) newPos = updatedPlayers[currentPlayer].pos;\n    if (ladders[newPos]) newPos = ladders[newPos];else if (snakes[newPos]) newPos = snakes[newPos];\n    updatedPlayers[currentPlayer].pos = newPos;\n    setPlayers(updatedPlayers);\n    if (newPos === 100) {\n      alert(`ðŸŽ‰ Player ${currentPlayer + 1} wins!`);\n      setGameStarted(false);\n    } else {\n      setCurrentPlayer((currentPlayer + 1) % numPlayers);\n    }\n  };\n  const playerColors = ['blue', 'red', 'green', 'purple'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    style: {\n      backgroundImage: \"url('/img/art.png')\",\n      backgroundSize: \"cover\",\n      backgroundAttachment: \"fixed\",\n      backgroundPosition: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Snakes and Ladders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), !gameStarted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"setup\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select number of players:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: numPlayers,\n        onChange: e => setNumPlayers(Number(e.target.value)),\n        children: [2, 3, 4].map(n => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: n,\n          children: n\n        }, n, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        onClick: startGame,\n        children: \"Start Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uD83C\\uDFB2 Player \", currentPlayer + 1, \"'s turn\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: rollDice,\n          children: \"Roll Dice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), diceResult && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dice-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `/img/dice${diceResult}.png`,\n            alt: `Dice ${diceResult}`,\n            className: \"dice-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"dice-results\",\n            children: [\"You rolled: \", diceResult]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/img/SnakeLadder.png\",\n          alt: \"Board\",\n          className: \"board-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), players.map((p, i) => {\n          const pos = p.pos;\n          const row = Math.floor((pos - 1) / 10);\n          const col = row % 2 === 0 ? (pos - 1) % 10 : 9 - (pos - 1) % 10;\n          const top = (9 - row) * 10;\n          const left = col * 10;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-piece\",\n            style: {\n              top: `${top}%`,\n              left: `${left}%`,\n              backgroundColor: playerColors[p.id]\n            },\n            children: p.id + 1\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dWFdbFMknHD5JxOW+wFDTfwj82k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","players","setPlayers","numPlayers","setNumPlayers","currentPlayer","setCurrentPlayer","diceResult","setDiceResult","gameStarted","setGameStarted","tiles","setTiles","ladders","snakes","newTiles","row","base","isEvenRow","col","num","push","startGame","initPlayers","i","id","pos","rollDice","result","Math","floor","random","updatedPlayers","newPos","alert","playerColors","className","style","backgroundImage","backgroundSize","backgroundAttachment","backgroundPosition","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","Number","target","map","n","onClick","src","alt","p","top","left","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/keerthanajusjith/Downloads/snakes-and-ladders-react (2)/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [players, setPlayers] = useState([]);\n  const [numPlayers, setNumPlayers] = useState(2);\n  const [currentPlayer, setCurrentPlayer] = useState(0);\n  const [diceResult, setDiceResult] = useState(null);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [tiles, setTiles] = useState([]);\n\n  const ladders = {\n    4: 14, 9: 31, 20: 38, 28: 84,\n    40: 59, 51: 67, 63: 81, 71: 91\n  };\n\n  const snakes = {\n    17: 7, 54: 34, 62: 19, 64: 60,\n    87: 24, 93: 73, 95: 75, 99: 78\n  };\n\n  useEffect(() => {\n    const newTiles = [];\n    for (let row = 0; row < 10; row++) {\n      const base = (9 - row) * 10;\n      const isEvenRow = row % 2 === 0;\n      for (let col = 0; col < 10; col++) {\n        const num = isEvenRow ? base + col + 1 : base + (9 - col + 1);\n        newTiles.push(num);\n      }\n    }\n    setTiles(newTiles);\n  }, []);\n\n  const startGame = () => {\n    const initPlayers = [];\n    for (let i = 0; i < numPlayers; i++) {\n      initPlayers.push({ id: i, pos: 1 });\n    }\n    setPlayers(initPlayers);\n    setCurrentPlayer(0);\n    setGameStarted(true);\n    setDiceResult(null);\n  };\n\n  const rollDice = () => {\n    const result = Math.floor(Math.random() * 6) + 1;\n    setDiceResult(result);\n\n    const updatedPlayers = [...players];\n    let newPos = updatedPlayers[currentPlayer].pos + result;\n    if (newPos > 100) newPos = updatedPlayers[currentPlayer].pos;\n\n    if (ladders[newPos]) newPos = ladders[newPos];\n    else if (snakes[newPos]) newPos = snakes[newPos];\n\n    updatedPlayers[currentPlayer].pos = newPos;\n    setPlayers(updatedPlayers);\n\n    if (newPos === 100) {\n      alert(`ðŸŽ‰ Player ${currentPlayer + 1} wins!`);\n      setGameStarted(false);\n    } else {\n      setCurrentPlayer((currentPlayer + 1) % numPlayers);\n    }\n  };\n\n  const playerColors = ['blue', 'red', 'green', 'purple'];\n\n  return (\n    <div\n      className=\"game\"\n      style={{\n        backgroundImage: \"url('/img/art.png')\",\n        backgroundSize: \"cover\",\n        backgroundAttachment: \"fixed\",\n        backgroundPosition: \"center\"\n      }}\n    >\n      <h1>Snakes and Ladders</h1>\n\n      {!gameStarted ? (\n        <div className=\"setup\">\n          <label>Select number of players:</label>\n          <select value={numPlayers} onChange={(e) => setNumPlayers(Number(e.target.value))}>\n            {[2, 3, 4].map(n => <option key={n} value={n}>{n}</option>)}\n          </select>\n          <button className=\"button\" onClick={startGame}>Start Game</button>\n        </div>\n      ) : (\n        <>\n          <div className=\"controls\">\n            <p>ðŸŽ² Player {currentPlayer + 1}'s turn</p>\n            <button className=\"button\" onClick={rollDice}>Roll Dice</button>\n            {diceResult && (\n              <div className=\"dice-container\">\n                <img\n                  src={`/img/dice${diceResult}.png`}\n                  alt={`Dice ${diceResult}`}\n                  className=\"dice-img\"\n                />\n                <div id=\"dice-results\">You rolled: {diceResult}</div>\n              </div>\n            )}\n          </div>\n\n          <div className=\"board-container\">\n            <img src=\"/img/SnakeLadder.png\" alt=\"Board\" className=\"board-img\" />\n            {players.map((p, i) => {\n              const pos = p.pos;\n              const row = Math.floor((pos - 1) / 10);\n              const col = row % 2 === 0 ? (pos - 1) % 10 : 9 - ((pos - 1) % 10);\n              const top = (9 - row) * 10;\n              const left = col * 10;\n              return (\n                <div\n                  key={i}\n                  className=\"player-piece\"\n                  style={{\n                    top: `${top}%`,\n                    left: `${left}%`,\n                    backgroundColor: playerColors[p.id]\n                  }}\n                >\n                  {p.id + 1}\n                </div>\n              );\n            })}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}